// .leistungen {
//   width: 100%;
//
//   .container {
//     display: grid;
//     width: 100%;
//     grid-template-columns: repeat(auto-fill, minmax(15rem, 1fr));
//     justify-content: center;
//     align-items: center;
//     align-content: center;
//     grid-gap: 2.5rem;
//     margin: 4rem 0 4rem 0;
//
//     @media (max-width: 1024px) {
//       grid-template-columns: repeat(auto-fill, minmax(22rem, 1fr));
//       grid-gap: 1.5rem;
//       margin: 1rem 1rem 0.5rem 1rem;
//     }
//
//     @media (max-width: 768px) {
//       grid-template-columns: repeat(auto-fill, minmax(16rem, 1fr));
//       grid-gap: 1.5rem;
//       margin: 1rem 1rem 0.5rem 1rem;
//     }
//
//     @media (max-width: 600px) {
//       width: 90%;
//       margin: 2rem 0 1rem 0;
//     }
//   }
// }
//
// .box {
//   display: flex;
//   flex-direction: column;
//   text-align: center;
//   justify-content: center;
//   align-items: center;
//   align-content: flex-start;
//   align-self: stretch;
//   background: #fff;
//
//   @media (max-width: 600px) {
//     margin-bottom: 1rem;
//     text-align: left;
//   }
//
//   h2 {
//     margin: 1rem 0 0.5rem 0;
//     font-size: 1.1rem;
//     padding: 0.5rem;
//     width: 100%;
//
//     @media (max-width: 768px) {
//       font-size: 1.1rem;
//       margin: 0.5rem 0 0 2rem;
//     }
//
//     @media (max-width: 600px) {
//       margin-top: 2rem;
//       font-size: 1.5rem;
//     }
//   }
//
//   p {
//     margin-bottom: 1rem;
//     padding: 0.5rem;
//     flex-grow: 1;
//
//     @media (max-width: 600px) {
//       padding: 1.5rem;
//     }
//   }
//
//   a:link,
//   a:visited {
//     background: #014993;
//     color: #fff;
//     width: 90%;
//     margin-bottom: 1rem;
//     border: 0.1rem solid #014993;
//     text-decoration: none;
//     padding: 1rem;
//     text-transform: uppercase;
//     transition: 0.3s all ease-in;
//
//     &:hover {
//       background: white;
//       border: 0.1rem solid #014993;
//       color: #014993;
//     }
//
//     @media (max-width: 600px) {
//       text-align: center;
//       width: 90%;
//       padding: 0.5rem 1rem 0.5rem 1rem;
//       font-size: 0.9rem;
//     }
//   }
// }

// :root {
//   --color-primary: #014993;
//   --color-light: #fff;
//   --font-body: sans-serif; // Add your body font here
//   --font-heading: "Exo", sans-serif; // Add your heading font here
// }
//
// .leistungen {
//   width: 100%;
//   // Use clamp() for fluid vertical margins.
//   // MIN: 2rem, PREFERRED: 5vw, MAX: 4rem
//   margin-block: clamp(2rem, 5vw, 4rem);
//
//   .container {
//     display: grid;
//     width: 90%; // Set a consistent width and center with margin:auto
//     max-width: 1300px; // Set a max-width to align with the rest of your site
//     margin-inline: auto; // Modern way to do horizontal centering
//
//     // 1. A SINGLE, POWERFUL GRID DEFINITION
//     // This replaces all the confusing media queries.
//     // 'auto-fit' creates columns that are at least 20rem wide.
//     // When a column can no longer fit, it wraps automatically.
//     grid-template-columns: repeat(auto-fit, minmax(20rem, 1fr));
//
//     // 2. FLUID SPACING
//     // Use clamp() for a gap that smoothly scales with the viewport width.
//     gap: clamp(1.5rem, 4vw, 2.5rem);
//   }
// }
//
// .box {
//   display: flex;
//   flex-direction: column;
//   align-items: center; // Center content horizontally by default
//   background: var(--color-light);
//   // Ensures all boxes in a grid row are the same height
//   align-self: stretch;
//
//   // We only need one media query for a specific layout change
//   @media (max-width: 600px) {
//     // On small screens, align content to the left
//     align-items: flex-start;
//     padding-inline: 1.5rem; // Add horizontal padding for the content
//   }
//
//   h2 {
//     font-family: var(--font-heading);
//     margin: 1.5rem 0 0.5rem 0;
//     padding-inline: 1rem; // Give headings some horizontal breathing room
//
//     // 3. FLUID TYPOGRAPHY
//     // Font size smoothly scales from 1.1rem to 1.5rem
//     font-size: clamp(1.1rem, 1rem + 1vw, 1.5rem);
//   }
//
//   p {
//     font-family: var(--font-body);
//     padding-inline: 1rem;
//     margin-bottom: 1.5rem;
//     // This is the key to making the buttons align at the bottom.
//     // It makes the paragraph take up all available vertical space.
//     flex-grow: 1;
//
//     @media (max-width: 600px) {
//       // Remove horizontal padding on mobile since the parent .box has it now
//       padding-inline: 0;
//     }
//   }
//
//   a {
//     // Re-styling the link to be more robust
//     display: inline-block;
//     background: var(--color-primary);
//     color: var(--color-light);
//     width: calc(100% - 3rem); // Calculate width based on padding
//     margin-bottom: 1.5rem;
//     border: 0.1rem solid var(--color-primary);
//     text-decoration: none;
//     padding: 1rem;
//     text-transform: uppercase;
//     text-align: center;
//     transition:
//       background-color 0.3s,
//       color 0.3s;
//
//     &:hover,
//     &:focus {
//       background: var(--color-light);
//       color: var(--color-primary);
//     }
//   }
// }

// Variables are now defined in styles/variables.css

// Main container for the grid of feature boxes
.leistungen {
  padding-block: 4rem;

  .container {
    display: grid;
    gap: 2.5rem; // Consistent gap for all screen sizes

    // Standard container setup
    width: 90%;
    max-width: 1200px;
    margin-inline: auto;

    // --- RESPONSIVE GRID LOGIC ---

    // 1. Mobile First (Default State): 1 column
    grid-template-columns: 1fr;

    // 2. Tablet View: 2 columns
    // On screens wider than 768px, switch to a 2-column grid
    @media (min-width: 768px) {
      grid-template-columns: repeat(2, 1fr);
    }

    // 3. Desktop View: 4 columns
    // On screens wider than 1200px, switch to the full 4-column grid
    @media (min-width: 1200px) {
      grid-template-columns: repeat(4, 1fr);
    }
  }
}

// Styling for each individual feature box (This is from the previous answer and is correct)
.box {
  background: var(--color-light);
  display: flex;
  flex-direction: column;
  text-align: left;
  padding: 0.8rem;
  font-size: 0.9rem;
  border-top: 4px solid var(--color-primary);

  align-self: stretch;

  h2 {
    font-family: var(--font-heading);
    color: var(--color-primary);
    font-size: 0.9rem;
    font-weight: 700;
    margin: 0 0 1rem 0;
    // text-decoration: underline;
    // text-decoration-thickness: 1px;
    text-underline-offset: 4px;
  }

  p {
    font-family: var(--font-body);
    color: var(--color-text);
    line-height: 1.6;
    margin: 0 0 1.5rem 0;
    flex-grow: 1;
  }

  a {
    text-decoration: none;

    &:hover h2 {
      opacity: 0.8;
    }
  }

  // A specific class for the main button at the bottom, if you've added it
  .button,
  a:last-of-type {
    display: block;
    width: 100%;
    background: var(--color-primary);
    color: var(--color-light);
    border: 1px solid var(--color-primary);
    padding: 0.8rem 1rem;
    text-align: center;
    text-transform: uppercase;
    font-weight: 600;
    font-size: 0.9rem;
    transition:
      background-color 0.3s,
      color 0.3s;

    &:hover,
    &:focus {
      background: var(--color-light);
      color: var(--color-primary);
    }
  }
}
